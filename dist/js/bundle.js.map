{"version":3,"sources":["bundle.js","app.js","controllers/calculatorController.js","controllers/currencyController.js","controllers/pigLatinController.js","controllers/randomController.js","controllers/stopwatchController.js","directives/changeColorYellow.js","directives/numberDirective.js","services/calcService.js","services/currencyService.js","services/pigService.js","services/randomService.js","services/stopWatchService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","$scope","calcService","getOperators","then","res","operators","result","calculate","a","b","operator","currencyService","exchangeRates","data","countryData","countries","pigService","showText","showBox","convertFirstName","cFirstName","convertName","name","convertLastName","cLastName","lastName","getRate","getPorkRate","randomService","number","random12","parseInt","c","d","$timeout","stopWatchService","stopwatch","getInstance","showValue","stopped","countdown","counter","cancel","stop","reset","directive","restrict","link","element","attrs","bind","css","template","scope","service","$http","vm","this","method","firstNum","secondNum","isNaN","Number","Math","sqrt","toFixed","pow","str","pigLatin","regex","match","vowelIndice","indexOf","substr","min","max","floor","random","$filter","startTime","endTime","delay","elapsedTime","timer","Date","elapsedStr","format","tick","start"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('myApp', ['ui.router']).config(function ($stateProvider, $urlRouterProvider) {\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/about.html'\n    }).state('currencyConverter', {\n        url: '/currencyconverter',\n        templateUrl: './views/currencyconverter.html',\n        controller: 'currencyController'\n    }).state('calculator', {\n        url: '/calculator',\n        templateUrl: './views/calculator.html',\n        controller: 'calculatorController'\n    }).state('stopwatch', {\n        url: '/stopwatch',\n        templateUrl: './views/stopwatch.html',\n        controller: 'stopwatchController'\n    }).state('randomNumberGenerator', {\n        url: '/randomnumbergenerator',\n        templateUrl: './views/randomnumbergenerator.html',\n        controller: 'randomController'\n    }).state('pigLatin', {\n        url: '/piglatin',\n        templateUrl: './views/pigLatin.html',\n        controller: 'pigLatinController'\n    }).state('tenThousand', {\n        url: '/tenthousand',\n        templateUrl: './views/ten-thousand.html'\n    });\n\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('myApp').controller('calculatorController', function ($scope, calcService) {\n\n    calcService.getOperators().then(function (res) {\n        $scope.operators = calcService.operators;\n        $scope.result = function () {\n            return calcService.calculate($scope.a, $scope.b, $scope.operator);\n        };\n    });\n});\n'use strict';\n\nangular.module('myApp').controller('currencyController', function ($scope, currencyService) {\n\n    currencyService.exchangeRates().then(function (result) {\n        $scope.data = result.data;\n        currencyService.countryData().then(function (res) {\n            $scope.countries = res.data;\n        });\n    });\n});\n'use strict';\n\nangular.module('myApp').controller('pigLatinController', function ($scope, pigService) {\n\n    $scope.showText = false;\n    $scope.showBox = false;\n    $scope.convertFirstName = function () {\n        $scope.cFirstName = pigService.convertName($scope.name);\n        $scope.showText = true;\n    };\n\n    $scope.convertLastName = function () {\n        $scope.cLastName = pigService.convertName($scope.lastName);\n    };\n    $scope.getRate = function () {\n        pigService.getPorkRate().then(function (result) {\n            $scope.data = result.data.data;\n            $scope.showBox = true;\n        });\n    };\n});\n'use strict';\n\nangular.module('myApp').controller('randomController', function ($scope, randomService) {\n\n    $scope.result = function () {\n        $scope.number = randomService.random12(parseInt($scope.c), parseInt($scope.d));\n    };\n    $scope.showText = false;\n});\n'use strict';\n\nangular.module('myApp').controller('stopwatchController', function ($scope, $timeout, stopWatchService) {\n\n    $scope.stopwatch = stopWatchService.getInstance();\n    $scope.showBox = true;\n    $scope.showValue = true;\n    var stopped = void 0;\n    $scope.countdown = function () {\n\n        $scope.showValue = true;\n        stopped = $timeout(function () {\n            $scope.showBox = false;\n            if ($scope.counter > 0) {\n                $scope.counter--;\n                $scope.countdown();\n                if ($scope.counter == 0) {\n                    $timeout.cancel(stopped);\n                }\n            }\n        }, 1000);\n    };\n    $scope.stop = function () {\n        $timeout.cancel(stopped);\n        $scope.showBox = true;\n    };\n    $scope.reset = function () {\n        $scope.counter = 0;\n        $scope.showValue = true;\n    };\n});\n'use strict';\n\nangular.module('myApp').directive('yellowDirective', function () {\n    return {\n        restrict: 'EA',\n\n        link: function link($scope, element, attrs) {\n            element.bind('mouseenter', function () {\n                element.css('background-color', '#F2ABBF');\n            });\n            element.bind('mouseleave', function () {\n                element.css('background-color', '#29BFC6');\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('myApp').directive('numberDirective', function ($timeout) {\n    return {\n        restrict: \"E\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 10;\n            $timeout(function () {\n                scope.number = 9;\n                $timeout(function () {\n                    scope.number = 8;\n                    $timeout(function () {\n                        scope.number = 7;\n                        $timeout(function () {\n                            scope.number = 6;\n                            $timeout(function () {\n                                scope.number = 5;\n                                $timeout(function () {\n                                    scope.number = 4;\n                                    $timeout(function () {\n                                        scope.number = 3;\n                                        $timeout(function () {\n                                            scope.number = 2;\n                                            $timeout(function () {\n                                                scope.number = 1;\n                                                $timeout(function () {\n                                                    scope.number = '$10,000!!!';\n                                                }, 3000);\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('myApp').service('calcService', function ($http) {\n    var vm = this;\n    vm.getOperators = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/operators'\n        }).then(function (res) {\n            vm.operators = res.data;\n\n            vm.calculate = function (firstNum, secondNum, operator) {\n\n                if (isNaN(firstNum) || isNaN(secondNum)) {\n                    return 'please enter a number';\n                }\n                switch (operator) {\n                    case 'CLEAR':\n                        return firstNum = secondNum = null;\n                    case '+':\n                        return Number(firstNum) + Number(secondNum);\n                    case '-':\n                        return firstNum - secondNum;\n                    case '*':\n                        return firstNum * secondNum;\n                    case '/':\n                        return firstNum / secondNum;\n                    case 'squareroot(b)':\n                        return Math.sqrt(secondNum).toFixed(2);\n                    case 'a^b':\n                        return Math.pow(firstNum, secondNum);\n                    case '(a^2 + b^2)':\n                        if (firstNum == null || secondNum == null) {\n                            return 'need two numbers';\n                        } else {\n                            return firstNum * firstNum + secondNum * secondNum;\n                        }\n                }\n            };\n        });\n    };\n});\n'use strict';\n\nangular.module('myApp').service('currencyService', function ($http) {\n    this.countryData = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/countries'\n        });\n    };\n\n    this.exchangeRates = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/currency'\n        });\n    };\n});\n'use strict';\n\nangular.module('myApp').service('pigService', function ($http) {\n    this.convertName = function (str) {\n        var pigLatin = '';\n        var regex = /[aeiou]/gi;\n        if (str[0].match(regex)) {\n            pigLatin = str + 'way';\n        } else {\n            var vowelIndice = str.indexOf(str.match(regex)[0]);\n            pigLatin = str.substr(vowelIndice) + str.substr(0, vowelIndice) + 'ay';\n        }\n        return pigLatin;\n    };\n    this.getPorkRate = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/pigdata'\n        });\n    };\n});\n'use strict';\n\nangular.module('myApp').service('randomService', function () {\n    this.random12 = function (min, max) {\n        if (min >= max) {\n            return \"please enter a valid range\";\n        } else if (isNaN(min) == true || isNaN(max) == true) {\n            return \"please enter numbers\";\n        } else {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n});\n'use strict';\n\nangular.module('myApp').service('stopWatchService', function ($filter, $timeout) {\n\n    var stopwatch = function stopwatch() {\n        this.startTime = null;\n        this.endTime = null;\n        this.delay = 1000;\n        this.elapsedTime = function () {\n            if (timer) return new Date() - this.startTime;\n            return this.endTime - this.startTime;\n        };\n        this.elapsedStr = function (format) {\n            ;\n            return $filter('date')(this.elapsedTime(), format);\n        };\n\n        var timer = null;\n        var tick = function () {\n            this.endTime = new Date();\n            timer = $timeout(tick, this.delay);\n        }.bind(this);\n        this.start = function () {\n            if (timer) return;\n            if (this.startTime == null) this.startTime = new Date();else this.startTime = new Date() - this.elapsedTime();\n            tick();\n        };\n\n        this.stop = function () {\n            if (!timer) return;\n            this.endTime = new Date();\n            $timeout.cancel(timer);\n            timer = null;\n        };\n        this.reset = function () {\n            this.stop();\n            this.startTime = null;\n            this.endTime = null;\n        };\n    };\n    return {\n        getInstance: function getInstance() {\n            return new stopwatch();\n        }\n    };\n});","angular.module('myApp', ['ui.router'])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                templateUrl: './views/about.html'\r\n            })\r\n            .state('currencyConverter', {\r\n                url: '/currencyconverter',\r\n                templateUrl: './views/currencyconverter.html',\r\n                controller: 'currencyController'\r\n            })\r\n            .state('calculator', {\r\n                url: '/calculator',\r\n                templateUrl: './views/calculator.html',\r\n                controller: 'calculatorController'\r\n            })\r\n            .state('stopwatch', {\r\n                url: '/stopwatch',\r\n                templateUrl: './views/stopwatch.html',\r\n                controller: 'stopwatchController'\r\n            })\r\n\r\n            .state('randomNumberGenerator', {\r\n                url: '/randomnumbergenerator',\r\n                templateUrl: './views/randomnumbergenerator.html',\r\n                controller: 'randomController'\r\n            })\r\n            .state('pigLatin', {\r\n                url: '/piglatin',\r\n                templateUrl: './views/pigLatin.html',\r\n                controller: 'pigLatinController'\r\n            })\r\n            .state('tenThousand',{\r\n                url: '/tenthousand',\r\n                templateUrl: './views/ten-thousand.html'\r\n            })\r\n\r\n        $urlRouterProvider\r\n            .otherwise('/')\r\n    });","angular.module('myApp').controller('calculatorController', function ($scope, calcService) {\r\n\r\n    calcService.getOperators().then(res => {\r\n        $scope.operators = calcService.operators;\r\n        $scope.result = () => {\r\n            return calcService.calculate($scope.a, $scope.b, $scope.operator);\r\n        }\r\n    })\r\n});\r\n","angular.module('myApp').controller('currencyController', function ($scope, currencyService) {\r\n\r\n    currencyService.exchangeRates().then(result => {\r\n        $scope.data = result.data;\r\n        currencyService.countryData().then(res => {\r\n            $scope.countries = res.data;\r\n        })\r\n    });\r\n});\r\n","angular.module('myApp').controller('pigLatinController', function ($scope, pigService) {\r\n\r\n    $scope.showText = false;\r\n    $scope.showBox = false;\r\n    $scope.convertFirstName = () => {\r\n        $scope.cFirstName = pigService.convertName($scope.name);\r\n        $scope.showText = true;\r\n    }\r\n\r\n    $scope.convertLastName = () => {\r\n        $scope.cLastName = pigService.convertName($scope.lastName);\r\n    }\r\n    $scope.getRate = () => {\r\n        pigService.getPorkRate().then(result => {\r\n            $scope.data = result.data.data;\r\n            $scope.showBox = true;\r\n        })\r\n    }\r\n});\r\n","angular.module('myApp').controller('randomController', function ($scope, randomService) {\r\n\r\n    $scope.result = () => {\r\n        $scope.number = randomService.random12(parseInt($scope.c), parseInt($scope.d));\r\n    }\r\n    $scope.showText = false;\r\n\r\n});\r\n","angular.module('myApp').controller('stopwatchController', function ($scope, $timeout, stopWatchService) {\r\n\r\n    $scope.stopwatch = stopWatchService.getInstance();\r\n    $scope.showBox = true;\r\n    $scope.showValue = true;\r\n    let stopped;\r\n    $scope.countdown = () => {\r\n\r\n        $scope.showValue = true;\r\n        stopped = $timeout(() => {\r\n            $scope.showBox = false;\r\n            if ($scope.counter > 0) {\r\n                $scope.counter--;\r\n                $scope.countdown();\r\n                if ($scope.counter == 0) {\r\n                    $timeout.cancel(stopped);\r\n                }\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    };\r\n    $scope.stop = () => {\r\n        $timeout.cancel(stopped);\r\n        $scope.showBox = true;\r\n\r\n    }\r\n    $scope.reset = () => {\r\n        $scope.counter = 0;\r\n        $scope.showValue = true;\r\n    }\r\n\r\n\r\n});","angular.module('myApp').directive('yellowDirective', function () {\r\n    return {\r\n        restrict: 'EA',\r\n\r\n        link: ($scope, element, attrs) => {\r\n            element.bind('mouseenter', () => {\r\n                element.css('background-color', '#F2ABBF');\r\n            });\r\n            element.bind('mouseleave', () => {\r\n                element.css('background-color', '#29BFC6');\r\n            });\r\n        }\r\n    };\r\n});","angular.module('myApp').directive('numberDirective', function ($timeout) {\r\n    return {\r\n        restrict: \"E\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 10;\r\n            $timeout(() => {\r\n                scope.number = 9;\r\n                $timeout(() => {\r\n                    scope.number = 8;\r\n                    $timeout(() => {\r\n                        scope.number = 7;\r\n                        $timeout(() => {\r\n                            scope.number = 6;\r\n                            $timeout(() => {\r\n                                scope.number = 5;\r\n                                $timeout(() => {\r\n                                    scope.number = 4;\r\n                                    $timeout(() => {\r\n                                        scope.number = 3;\r\n                                        $timeout(() => {\r\n                                            scope.number = 2;\r\n                                            $timeout(() => {\r\n                                                scope.number = 1;\r\n                                                $timeout(() => {\r\n                                                    scope.number = '$10,000!!!';\r\n                                                }, 3000)\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n","angular.module('myApp').service('calcService', function ($http) {\r\n    let vm = this;\r\n    vm.getOperators = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/operators'\r\n        }).then(res => {\r\n            vm.operators = res.data;\r\n\r\n            vm.calculate = (firstNum, secondNum, operator) => {\r\n\r\n                if (isNaN(firstNum) || isNaN(secondNum)) {\r\n                    return 'please enter a number';\r\n                }\r\n                switch(operator) {\r\n                    case 'CLEAR':\r\n                        return firstNum = secondNum = null;\r\n                    case '+':\r\n                        return Number(firstNum) + Number(secondNum);\r\n                    case '-':\r\n                        return firstNum - secondNum;\r\n                    case  '*':\r\n                        return firstNum * secondNum;\r\n                    case  '/':\r\n                        return firstNum / secondNum;\r\n                    case 'squareroot(b)':\r\n                        return Math.sqrt(secondNum).toFixed(2);\r\n                    case 'a^b':\r\n                        return Math.pow(firstNum, secondNum);\r\n                    case '(a^2 + b^2)':\r\n                        if (firstNum == null || secondNum == null) {\r\n                            return 'need two numbers';\r\n                        } else {\r\n                            return (firstNum * firstNum) + (secondNum * secondNum);\r\n                        }\r\n                }\r\n            }\r\n        })\r\n    };\r\n});\r\n\r\n\r\n","angular.module('myApp').service('currencyService', function ($http) {\r\n    this.countryData = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/countries'\r\n        })\r\n    }\r\n\r\n    this.exchangeRates = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/currency'\r\n        })\r\n    };\r\n\r\n});\r\n","angular.module('myApp').service('pigService', function ($http) {\r\n    this.convertName = str => {\r\n        let pigLatin = '';\r\n        let regex = /[aeiou]/gi;\r\n        if (str[0].match(regex)) {\r\n            pigLatin = str + 'way';\r\n\r\n        } else {\r\n            let vowelIndice = str.indexOf(str.match(regex)[0]);\r\n            pigLatin = str.substr(vowelIndice) + str.substr(0, vowelIndice) + 'ay';\r\n        }\r\n        return pigLatin;\r\n    }\r\n    this.getPorkRate = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/pigdata'\r\n        })\r\n    }\r\n});","angular.module('myApp').service('randomService', function () {\r\n    this.random12 = (min, max) => {\r\n        if (min >= max) {\r\n            return \"please enter a valid range\"\r\n        } else if (isNaN(min) == true || isNaN(max) == true) {\r\n            return \"please enter numbers\";\r\n        } else {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n    };\r\n});\r\n","angular.module('myApp').service('stopWatchService', function ($filter, $timeout) {\r\n\r\n    let stopwatch = function () {\r\n        this.startTime = null;\r\n        this.endTime = null;\r\n        this.delay = 1000;\r\n        this.elapsedTime = function () {\r\n            if (timer)\r\n                return new Date() - this.startTime;\r\n            return this.endTime - this.startTime;\r\n        };\r\n        this.elapsedStr = function (format) {\r\n            ;\r\n            return $filter('date')(this.elapsedTime(), format);\r\n        };\r\n\r\n        let timer = null;\r\n        let tick = (function () {\r\n            this.endTime = new Date();\r\n            timer = $timeout(tick, this.delay);\r\n        }).bind(this);\r\n        this.start = function () {\r\n            if (timer)\r\n                return;\r\n            if (this.startTime == null)\r\n                this.startTime = new Date();\r\n            else\r\n                this.startTime = new Date() - this.elapsedTime();\r\n            tick();\r\n        };\r\n\r\n        this.stop = function () {\r\n            if (!timer)\r\n                return;\r\n            this.endTime = new Date();\r\n            $timeout.cancel(timer);\r\n            timer = null;\r\n        };\r\n        this.reset = function () {\r\n            this.stop();\r\n            this.startTime = null;\r\n            this.endTime = null\r\n        };\r\n    };\r\n    return {\r\n        getInstance: function () {\r\n            return new stopwatch();\r\n        }\r\n    };\r\n\r\n});\r\n"]}